package wibiral.tim.javachr.tracing;

import wibiral.tim.javachr.constraints.Constraint;
import wibiral.tim.javachr.RuleApplicator;
import wibiral.tim.javachr.constraints.ConstraintStore;
import wibiral.tim.javachr.rules.Rule;

/**
 * Base class for tracers that help debugging by tracing the execution order of the rule execution.
 * Derived class may implement tracing for command line or with a graphical interface.
 */
public interface Tracer {
    /**
     * The {@link RuleApplicator} tells the Tracer the last applied rule, the constraints to which the rule was applied and
     * the new constraints generated by the rule.
     * @param appliedRule The Rule that was applied.
     * @param matchedConstraints Constraints to which the rule was applied.
     * @param newConstraints New Constraints generated by the rule.
     * @return False if execution should be stopped, true if Handler should execute next step.
     */
    boolean step(Rule appliedRule, Constraint<?>[] matchedConstraints, Constraint<?>[] newConstraints);

    /**
     * The {@link RuleApplicator} tells the tracer that he started operating and the tracer shows a corresponding message.
     * @param store the {@link ConstraintStore} the solver holds.
     */
    void initMessage(ConstraintStore store);

    /**
     * The {@link ConstraintStore} tells the tracer that it is stopping now and the tracer shows a corresponding message.
     * @param store the {@link ConstraintStore} the solver holds.
     */
    void stopMessage(ConstraintStore store);

    /**
     * The {@link ConstraintStore} tells the tracer that it terminated and the tracer shows a corresponding message.
     * @param store the {@link ConstraintStore} the solver holds.
     */
    void terminatedMessage(ConstraintStore store);
}
